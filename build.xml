<project name="web-lab-3" default="compile" basedir=".">

    <property file="build.properties"/>

    <path id="lib.main.path">
        <fileset dir="lib" includes="**/*.jar"/>
        <pathelement path="lib/jakarta.jakartaee-api-8.0.0.jar"/>
    </path>


    <path id="classes.path">
        <fileset dir="${dst.classes}" includes="**/*.class"/>
    </path>


    <target name="compile">
        <property file="env.properties"/>
        <echo>Создание директории для классов проекта</echo>
        <mkdir dir="${dst.classes}"/>
        <javac srcdir="${src.main.java}"
               destdir="${dst.classes}"
               includeantruntime="false"
               target="${java.env.version}"
               source="${java.env.version}">
            <classpath refid="lib.main.path"/>
        </javac>


        <echo>Создание директории для классов-тестов</echo>
        <mkdir dir="${dst.test-classes}"/>
        <javac srcdir="${src.test.java}"
               destdir="${dst.test-classes}"
               includeantruntime="false"
               target="${java.env.version}"
               source="${java.env.version}">
            <classpath>
                <path refid="lib.main.path"/>
                <pathelement location="${dst.classes}"/>
            </classpath>
        </javac>

    </target>

    <target name="build" depends="compile">

        <mkdir dir="${dst.web}"/>

        <mkdir dir="${dst.web.web-inf}"/>

        <echo>Копирование классов</echo>
        <copy todir="${dst.web.web-inf.classes}">
            <fileset dir="${dst.classes}" includes="**/*.class"/>
        </copy>

        <echo>Копирование ресурсов конфигурации</echo>
        <copy todir="${dst.web.web-inf.classes}">
            <fileset dir="${src.main.resources}"/>
        </copy>

        <echo>Копирование библиотек</echo>
        <copy todir="${dst.web.web-inf.lib}">
            <fileset dir="lib" includes="**/*.jar"/>
        </copy>

        <echo>Копирование статических ресурсов</echo>
        <copy todir="${dst.web}">
            <fileset dir="${src.main.webapp}"/>
        </copy>

        <echo>Создание war-архива</echo>
        <war destfile="${dst.web.war}">
            <fileset dir="${dst.web}"/>
        </war>

    </target>

    <target name="deploy" depends="build">
        <copy todir="${path.to.deploy}" file="${dst.web.war}"/>
    </target>

    <target name="run" depends="deploy">
        <exec executable="${run.script}"/>
    </target>

    <target name="clean">
        <echo>Удаление ${dstDir}</echo>
        <delete dir="${dst.classes}"/>
    </target>

    <target name="test" depends="compile">
        <mkdir dir="${dst.reports}"/>

        <junit printsummary="yes" haltonfailure="yes">
            <classpath>
                <pathelement location="${dst.test-classes}"/>
                <pathelement path="${dst.classes}"/>
                <pathelement path="lib/junit-4.13.2.jar"/>
                <pathelement path="lib/hamcrest-core-1.3.jar"/>
            </classpath>
            <test name="weblab3.util.HitCheckTest" todir="${dst.reports}"/>
            <formatter type="plain"/>
        </junit>
    </target>


    <target name="doc" depends="build"
            description="Генерация javadoc и добавление в MANIFEST.MF MD5 и SHA-1 файлов проекта">
        <mkdir dir="${dst.doc}"/>
        <javadoc sourcepath="${src.main}" destdir="${dst.doc}">
            <fileset dir="${src.main}"/>
            <classpath>
                <path refid="lib.main.path"/>
            </classpath>
        </javadoc>

        <jar destfile="${dstDir}/javadoc.jar"
             basedir="${dst.doc}"
             update="true">
        </jar>

    </target>

    <!--    <target name="generate-hashes">-->
    <!--        <checksum todir="${dst.hash}" algorithm="MD5">-->
    <!--            <fileset dir="${src.main.java}"/>-->
    <!--        </checksum>-->
    <!--        <checksum todir="${dst.hash}" algorithm="SHA-1">-->
    <!--            <fileset dir="${src.main.java}"/>-->
    <!--        </checksum>-->
    <!--    </target>-->


    <target name="sign">


        <signjar jar="${dst.web.war}"
                 alias="${key.alias}"
                 storepass="${keystore.password}"
                 verbose="true"
                 sigfile="MANIFEST.MF"
                 digestalg="SHA-1"/>

        <manifest file="MANIFEST.MF" mode="update">
            <attribute name="Signature-Version" value="1.0"/>
            <attribute name="Created-By" value="1.0 (Ant)"/>
        </manifest>
    </target>


    <target name="env" depends="run">

    </target>
</project>